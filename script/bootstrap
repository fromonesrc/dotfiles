#!/bin/sh
#
# bootstrap installs things.

DOTFILES_ROOT="`pwd`"

set -e

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

link_files () {
  ln -s $1 $2
  success "linked $1 to $2"
}

install_dotfiles () {
  info 'installing dotfiles'

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in `find $DOTFILES_ROOT -maxdepth 2 -name \*.symlink`
  do
    dest="$HOME/.`basename \"${source%.*}\"`"

    if [ -f $dest ] || [ -d $dest ]
    then

      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        user "File already exists: `basename $source`, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        success "removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv $dest $dest\.backup
        success "moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_files $source $dest
      else
        success "skipped $source"
      fi

    else
      link_files $source $dest
    fi

  done
}

install_dotfiles

# If we are on a mac, lets install and setup homebrew
if [ "$(uname -s)" == "Darwin" ]
then
  info "installing dependencies"
  if . bin/dot > /tmp/dotfiles-dot 2>&1
  then
    success "dependencies installed"
  else
    fail "error installing dependencies"
  fi
fi

info "installing submodules"
if git submodule init && git submodule update
then
  success "submodules installed"
else
  fail "error installing submodules"
fi

info "building command-t"
if [ -f ~/.janus/Command-T/ruby/command-t/extconf.rb ]
then
  if cd ~/.janus/Command-T/ruby/command-t && rbenv local system && ruby extconf.rb && make
  then
    success "command-t build"
  else
    "building command-t failed"
  fi
  rm ~/.janus/Command-T/ruby/command-t/.ruby-version
fi

info "installing fonts"
if cp $DOTFILES_ROOT/fonts/Monaco-Powerline.otf ~/Library/Fonts/
then
  success "fonts installed"
else
  fail "error installing fonts"
fi

info "configure iterm"
if /usr/libexec/PlistBuddy -c "Set :New\ Bookmarks:0:Normal\ Font 'MonacoForPowerline 16'" ~/Library/Preferences/com.googlecode.iterm2.plist
then
  success "iterm configured. restart iterm for all changes to take effect."
else
  fail "error configuring iterm"
fi

echo ''
echo '  All installed!'
